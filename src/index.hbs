<!DOCTYPE html>
<html lang="en">
  {{> header isHome=true}}
  <div class="container">
    
      {{> about}}
      <div class="col-md-6 col-md-offset-1">
        {{#each datasets}}
        <div id="{{Slug}}" class="dataset row">
          <h3><a href="{{Slug}}/">{{Name}}</a></h3>
          <p>{{#each Tags}}<span class="label label-info tag link-tag">{{.}}</span>{{/each}}</p>
          <p>{{Description}}</p>
          <p><a href="{{Slug}}/">Details &rarr;</a></p>
        </div>
        {{/each}}
      </div>
      
    
  {{> footer}}
  </div>
    <script>
      // Get datasets object
      var datasets = {{toJSON datasets}};

      // Listen for changes in search box and filter based
      // on input
      $("#search-box").on('input', function() {
        var searchText = $(this).val();
        // Loop over each item and hide non-matching
        $(".dataset").each(function() {
          if (isMatch($(this).attr('id'), searchText)) {
            $(this).show();
          } else {
            $(this).hide();
          }
        });
      });

      // Helper function to see if dataset has some match
      var isMatch = function(slug, text) {
        // Lowercase search text
        text = text.toLowerCase();
        // Find matching dataset
        var dataset;
        for (var i = 0; i < datasets.length; i++) {
          if (datasets[i].Slug === slug) {
            dataset = datasets[i];
            break;
          }
        }

        // Check dataset name
        if (dataset.Name.toLowerCase().indexOf(text) !== -1) {
          return true;
        }

        // Check dataset tags
        for (var i = 0; i < dataset.Tags.length; i++) {
          if (dataset.Tags[i].toLowerCase().indexOf(text) !== -1) {
            return true;
          }
        }

        // Check dataset description
        if (dataset.Description.toLowerCase().indexOf(text) !== -1) {
          return true;
        }

        // Check resources Type
        var hasMatch = false;
        for (var i = 0; i < dataset.Resources.length; i++) {
          if (!dataset.Resources[i].Type) { continue; }
          if (dataset.Resources[i].Type.toLowerCase().indexOf(text) !== -1) {
            hasMatch = true;
            break;
          }
        }
        if (hasMatch) { return true; }

        // Check resources ARN
        hasMatch = false;
        for (var i = 0; i < dataset.Resources.length; i++) {
          if (!dataset.Resources[i].ARN) { continue; }
          if (dataset.Resources[i].ARN.toLowerCase().indexOf(text) !== -1) {
            hasMatch = true;
            break;
          }
        }
        if (hasMatch) { return true; }

        // If we're here, no match
        return false;
      };

      var triggerInput = function (text) {
        $("#search-box").focus();
        $("#search-box").val(text);
        $('#search-box').trigger('input');
      }

      // Listen for clicks on the tags and fill in search box if clicked
      $('.tag').click(function () {
        triggerInput($(this).text());
      });

      // Handle query passed in url via ?search=foo
      var search = /search=(.*)/.exec(window.location.search);
      if (search) {
        triggerInput(decodeURIComponent(search[1]));
      }
    </script>
  </body>
</html>